<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiao.dao.inter.UserMapper">
  <resultMap id="BaseResultMap" type="com.xiao.dao.dto.User">
    <!--@mbg.generated-->
    <!--@Table `user`-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="police_id" jdbcType="VARCHAR" property="policeId" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="unit_id" jdbcType="BIGINT" property="unitId" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="enable" jdbcType="BIT" property="enable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, police_id, real_name, unit_id, `position`, id_card, gender, 
    phone, email, avatar, `enable`, create_time, update_time, last_login_time, is_deleted, 
    token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from `user`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xiao.dao.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user` (username, `password`, police_id, 
      real_name, unit_id, `position`, 
      id_card, gender, phone, 
      email, avatar, `enable`, 
      create_time, update_time, last_login_time, 
      is_deleted, token)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{policeId,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{unitId,jdbcType=BIGINT}, #{position,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xiao.dao.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="policeId != null and policeId != ''">
        police_id,
      </if>
      <if test="realName != null and realName != ''">
        real_name,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="position != null and position != ''">
        `position`,
      </if>
      <if test="idCard != null and idCard != ''">
        id_card,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null and phone != ''">
        phone,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="avatar != null and avatar != ''">
        avatar,
      </if>
      <if test="enable != null">
        `enable`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="token != null and token != ''">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="policeId != null and policeId != ''">
        #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName != ''">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="position != null and position != ''">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null and idCard != ''">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null and phone != ''">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="token != null and token != ''">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiao.dao.dto.User">
    <!--@mbg.generated-->
    update `user`
    <set>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="policeId != null and policeId != ''">
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName != ''">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="position != null and position != ''">
        `position` = #{position,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        `enable` = #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="token != null and token != ''">
        token = #{token,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiao.dao.dto.User">
    <!--@mbg.generated-->
    update `user`
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      police_id = #{policeId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=BIGINT},
      `position` = #{position,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      token = #{token,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update `user`
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.username,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="police_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.policeId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="real_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.realName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="unit_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.unitId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`position` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.position,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="id_card = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.idCard,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="gender = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.gender,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="avatar = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.avatar,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`enable` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.enable,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_login_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="is_deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.isDeleted,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="token = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.token,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    (username, `password`, police_id, real_name, unit_id, `position`, id_card, gender, 
      phone, email, avatar, `enable`, create_time, update_time, last_login_time, is_deleted, 
      token)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.policeId,jdbcType=VARCHAR}, 
        #{item.realName,jdbcType=VARCHAR}, #{item.unitId,jdbcType=BIGINT}, #{item.position,jdbcType=VARCHAR}, 
        #{item.idCard,jdbcType=VARCHAR}, #{item.gender,jdbcType=TINYINT}, #{item.phone,jdbcType=VARCHAR}, 
        #{item.email,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.enable,jdbcType=BIT}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.lastLoginTime,jdbcType=TIMESTAMP}, 
        #{item.isDeleted,jdbcType=BIT}, #{item.token,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelectiveUseDefaultForNull" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    (username, `password`, police_id, real_name, unit_id, `position`, id_card, gender, 
      phone, email, avatar, `enable`, create_time, update_time, last_login_time, is_deleted, 
      token)
    values
    <foreach collection="list" item="item" separator=",">
      (
      <choose>
        <when test="item.username != null">
          #{item.username,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.password != null">
          #{item.password,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.policeId != null">
          #{item.policeId,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.realName != null">
          #{item.realName,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.unitId != null">
          #{item.unitId,jdbcType=BIGINT},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.position != null">
          #{item.position,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.idCard != null">
          #{item.idCard,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.gender != null">
          #{item.gender,jdbcType=TINYINT},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.phone != null">
          #{item.phone,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.email != null">
          #{item.email,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.avatar != null">
          #{item.avatar,jdbcType=VARCHAR},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.enable != null">
          #{item.enable,jdbcType=BIT},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.lastLoginTime != null">
          #{item.lastLoginTime,jdbcType=TIMESTAMP},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.isDeleted != null">
          #{item.isDeleted,jdbcType=BIT},
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT,
        </otherwise>
      </choose>
      <choose>
        <when test="item.token != null">
          #{item.token,jdbcType=VARCHAR}
        </when>
        <!--@ignoreSql-->
        <otherwise>
          DEFAULT
        </otherwise>
      </choose>
      )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.xiao.dao.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      username,
      `password`,
      police_id,
      real_name,
      unit_id,
      `position`,
      id_card,
      gender,
      phone,
      email,
      avatar,
      `enable`,
      create_time,
      update_time,
      last_login_time,
      is_deleted,
      token,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{policeId,jdbcType=VARCHAR},
      #{realName,jdbcType=VARCHAR},
      #{unitId,jdbcType=BIGINT},
      #{position,jdbcType=VARCHAR},
      #{idCard,jdbcType=VARCHAR},
      #{gender,jdbcType=TINYINT},
      #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR},
      #{avatar,jdbcType=VARCHAR},
      #{enable,jdbcType=BIT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{lastLoginTime,jdbcType=TIMESTAMP},
      #{isDeleted,jdbcType=BIT},
      #{token,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      police_id = #{policeId,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=BIGINT},
      `position` = #{position,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      token = #{token,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.xiao.dao.dto.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="policeId != null and policeId != ''">
        police_id,
      </if>
      <if test="realName != null and realName != ''">
        real_name,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="position != null and position != ''">
        `position`,
      </if>
      <if test="idCard != null and idCard != ''">
        id_card,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null and phone != ''">
        phone,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="avatar != null and avatar != ''">
        avatar,
      </if>
      <if test="enable != null">
        `enable`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="token != null and token != ''">
        token,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null and username != ''">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="policeId != null and policeId != ''">
        #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName != ''">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="position != null and position != ''">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null and idCard != ''">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null and phone != ''">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="token != null and token != ''">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="policeId != null and policeId != ''">
        police_id = #{policeId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName != ''">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="position != null and position != ''">
        `position` = #{position,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null and avatar != ''">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="enable != null">
        `enable` = #{enable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="token != null and token != ''">
        token = #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

<!--auto generated by MybatisCodeHelper on 2025-04-11-->
  <select id="selectByIdAndIsDeleted" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `user`
        <where>
            <if test="id != null">
                and id=#{id,jdbcType=BIGINT}
            </if>
            <if test="isDeleted != null">
                and is_deleted=#{isDeleted,jdbcType=BIT}
            </if>
        </where>
    </select>

<!--auto generated by MybatisCodeHelper on 2025-04-11-->
  <select id="selectByPhoneAndIsDeleted" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `user`
    <where>
      <if test="phone != null and phone != ''">
        and phone=#{phone,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null">
        and is_deleted=#{isDeleted,jdbcType=BIT}
      </if>
    </where>
  </select>
</mapper>